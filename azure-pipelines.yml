trigger:
  branches:
    include:
      - main

pool:
  name: 'Self-hosted'  # Must match the name of your agent pool

variables:
  buildConfiguration: 'Release'

steps:
# Install .NET SDK
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '8.0.x'

# Restore dependencies (pointing to the solution file location)
- script: dotnet restore .\Lab4\ClassLibraryProjects.sln
  displayName: 'Restore dependencies'

# Build the solution (pointing to the solution file location)
- script: dotnet build .\Lab4\ClassLibraryProjects.sln --configuration $(buildConfiguration)
  displayName: 'Build project'

# Pack the NuGet package (pointing to the solution file location)
- script: dotnet pack .\Lab4\ClassLibraryProjects.sln --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)\nupkgs
  displayName: 'Pack NuGet package'

# Authenticate with Azure Artifacts
- task: NuGetAuthenticate@1
  displayName: 'Authenticate with Azure Artifacts'

# Push the NuGet package to Azure Artifacts (source feed URL)
- script: dotnet nuget push $(Build.ArtifactStagingDirectory)\nupkgs\*.nupkg --source "https://pkgs.dev.azure.com/nimani3/Lab4/_packaging/Lab4/nuget/v3/index.json" --api-key AzureArtifacts
  displayName: 'Push to Azure Artifacts'

  # Step 1: Download the Showcase artifact (NuGet package)
- task: DownloadPackage@0
  inputs:
    packageType: 'NuGet'
    feed: 'https://pkgs.dev.azure.com/nimani3/Lab4/_packaging/Lab4/nuget/v3/index.json'  # Your feed URL
    package: 'Showcase'  # The name of the package you want to download
    version: '1.0.0'  # Specify the version or use a variable for dynamic versioning
    downloadPath: '$(Pipeline.Workspace)/Showcase'  # Folder to download to

# Step 2: Run the Showcase Console App (assuming it's a .NET Core app)
- script: |
    echo "Running Showcase Console App from Artifact..."
    dotnet $(Pipeline.Workspace)/Showcase/Showcase.dll  # Adjust path if necessary
  displayName: 'Run Showcase Console App'
